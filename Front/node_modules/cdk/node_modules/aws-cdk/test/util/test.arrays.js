"use strict";
const util_1 = require("../../lib/util");
module.exports = {
    'flatten combines arrays'(test) {
        const output = util_1.flatten([
            ['a', 'b'],
            [],
            ['c']
        ]);
        test.deepEqual(output, ['a', 'b', 'c']);
        test.done();
    },
    'flatMap maps and combines'(test) {
        const input = ['A', 'B', 'C'];
        const output = util_1.flatMap(input, x => [x.toLowerCase()]);
        test.deepEqual(output, ['a', 'b', 'c']);
        test.done();
    },
    'partition splits the collection in twain'(test) {
        const xs = [1, 2, 3, 4, 5];
        const evens = util_1.partition(xs, x => x % 2 === 0);
        test.deepEqual(evens, [2, 4]);
        test.deepEqual(xs, [1, 3, 5]);
        test.done();
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVzdC5hcnJheXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJ0ZXN0LmFycmF5cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0EseUNBQTZEO0FBRTdELGlCQUFTO0lBQ1AseUJBQXlCLENBQUMsSUFBVTtRQUNsQyxNQUFNLE1BQU0sR0FBRyxjQUFPLENBQUM7WUFDckIsQ0FBQyxHQUFHLEVBQUUsR0FBRyxDQUFDO1lBQ1YsRUFBRTtZQUNGLENBQUMsR0FBRyxDQUFDO1NBQ04sQ0FBQyxDQUFDO1FBRUgsSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUM7UUFDeEMsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ2QsQ0FBQztJQUNELDJCQUEyQixDQUFDLElBQVU7UUFDcEMsTUFBTSxLQUFLLEdBQUcsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFDO1FBQzlCLE1BQU0sTUFBTSxHQUFHLGNBQU8sQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFFdEQsSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUM7UUFDeEMsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ2QsQ0FBQztJQUNELDBDQUEwQyxDQUFDLElBQVU7UUFDbkQsTUFBTSxFQUFFLEdBQUcsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDM0IsTUFBTSxLQUFLLEdBQUcsZ0JBQVMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO1FBRTlDLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDOUIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDOUIsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ2QsQ0FBQztDQUNGLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUZXN0IH0gZnJvbSAnbm9kZXVuaXQnO1xuaW1wb3J0IHsgZmxhdE1hcCwgZmxhdHRlbiwgcGFydGl0aW9uIH0gZnJvbSAnLi4vLi4vbGliL3V0aWwnO1xuXG5leHBvcnQgPSB7XG4gICdmbGF0dGVuIGNvbWJpbmVzIGFycmF5cycodGVzdDogVGVzdCkge1xuICAgIGNvbnN0IG91dHB1dCA9IGZsYXR0ZW4oW1xuICAgICAgWydhJywgJ2InXSxcbiAgICAgIFtdLFxuICAgICAgWydjJ11cbiAgICBdKTtcblxuICAgIHRlc3QuZGVlcEVxdWFsKG91dHB1dCwgWydhJywgJ2InLCAnYyddKTtcbiAgICB0ZXN0LmRvbmUoKTtcbiAgfSxcbiAgJ2ZsYXRNYXAgbWFwcyBhbmQgY29tYmluZXMnKHRlc3Q6IFRlc3QpIHtcbiAgICBjb25zdCBpbnB1dCA9IFsnQScsICdCJywgJ0MnXTtcbiAgICBjb25zdCBvdXRwdXQgPSBmbGF0TWFwKGlucHV0LCB4ID0+IFt4LnRvTG93ZXJDYXNlKCldKTtcblxuICAgIHRlc3QuZGVlcEVxdWFsKG91dHB1dCwgWydhJywgJ2InLCAnYyddKTtcbiAgICB0ZXN0LmRvbmUoKTtcbiAgfSxcbiAgJ3BhcnRpdGlvbiBzcGxpdHMgdGhlIGNvbGxlY3Rpb24gaW4gdHdhaW4nKHRlc3Q6IFRlc3QpIHtcbiAgICBjb25zdCB4cyA9IFsxLCAyLCAzLCA0LCA1XTtcbiAgICBjb25zdCBldmVucyA9IHBhcnRpdGlvbih4cywgeCA9PiB4ICUgMiA9PT0gMCk7XG5cbiAgICB0ZXN0LmRlZXBFcXVhbChldmVucywgWzIsIDRdKTtcbiAgICB0ZXN0LmRlZXBFcXVhbCh4cywgWzEsIDMsIDVdKTtcbiAgICB0ZXN0LmRvbmUoKTtcbiAgfSxcbn07XG4iXX0=