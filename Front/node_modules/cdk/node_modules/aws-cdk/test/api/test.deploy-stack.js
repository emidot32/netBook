"use strict";
const lib_1 = require("../../lib");
const util_1 = require("../util");
const mock_sdk_1 = require("../util/mock-sdk");
const FAKE_STACK = util_1.testStack({
    stackName: 'withouterrors',
    template: { resource: 'noerrorresource' },
});
module.exports = {
    async 'do deploy executable change set with 0 changes'(test) {
        // GIVEN
        const sdk = new mock_sdk_1.MockSDK();
        let executed = false;
        sdk.stubCloudFormation({
            describeStacks() {
                return {
                    Stacks: []
                };
            },
            createChangeSet() {
                return {};
            },
            describeChangeSet() {
                return {
                    Status: 'CREATE_COMPLETE',
                    Changes: [],
                };
            },
            executeChangeSet() {
                executed = true;
                return {};
            }
        });
        // WHEN
        const ret = await lib_1.deployStack({
            stack: FAKE_STACK,
            sdk,
        });
        // THEN
        test.equals(ret.noOp, false);
        test.equals(executed, true);
        test.done();
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVzdC5kZXBsb3ktc3RhY2suanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJ0ZXN0LmRlcGxveS1zdGFjay50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0EsbUNBQXdDO0FBQ3hDLGtDQUFvQztBQUNwQywrQ0FBMkM7QUFFM0MsTUFBTSxVQUFVLEdBQUcsZ0JBQVMsQ0FBQztJQUMzQixTQUFTLEVBQUUsZUFBZTtJQUMxQixRQUFRLEVBQUUsRUFBRSxRQUFRLEVBQUUsaUJBQWlCLEVBQUU7Q0FDMUMsQ0FBQyxDQUFDO0FBRUgsaUJBQVM7SUFDUCxLQUFLLENBQUMsZ0RBQWdELENBQUMsSUFBVTtRQUMvRCxRQUFRO1FBQ1IsTUFBTSxHQUFHLEdBQUcsSUFBSSxrQkFBTyxFQUFFLENBQUM7UUFFMUIsSUFBSSxRQUFRLEdBQUcsS0FBSyxDQUFDO1FBRXJCLEdBQUcsQ0FBQyxrQkFBa0IsQ0FBQztZQUNyQixjQUFjO2dCQUNaLE9BQU87b0JBQ0wsTUFBTSxFQUFFLEVBQUU7aUJBQ1gsQ0FBQztZQUNKLENBQUM7WUFFRCxlQUFlO2dCQUNiLE9BQU8sRUFBRSxDQUFDO1lBQ1osQ0FBQztZQUVELGlCQUFpQjtnQkFDZixPQUFPO29CQUNMLE1BQU0sRUFBRSxpQkFBaUI7b0JBQ3pCLE9BQU8sRUFBRSxFQUFFO2lCQUNaLENBQUM7WUFDSixDQUFDO1lBRUQsZ0JBQWdCO2dCQUNkLFFBQVEsR0FBRyxJQUFJLENBQUM7Z0JBQ2hCLE9BQU8sRUFBRSxDQUFDO1lBQ1osQ0FBQztTQUNGLENBQUMsQ0FBQztRQUVILE9BQU87UUFDUCxNQUFNLEdBQUcsR0FBRyxNQUFNLGlCQUFXLENBQUM7WUFDNUIsS0FBSyxFQUFFLFVBQVU7WUFDakIsR0FBRztTQUNKLENBQUMsQ0FBQztRQUVILE9BQU87UUFDUCxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxJQUFJLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFDN0IsSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFFNUIsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ2QsQ0FBQztDQUNGLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUZXN0IH0gZnJvbSAnbm9kZXVuaXQnO1xuaW1wb3J0IHsgZGVwbG95U3RhY2sgfSBmcm9tICcuLi8uLi9saWInO1xuaW1wb3J0IHsgdGVzdFN0YWNrIH0gZnJvbSAnLi4vdXRpbCc7XG5pbXBvcnQgeyBNb2NrU0RLIH0gZnJvbSAnLi4vdXRpbC9tb2NrLXNkayc7XG5cbmNvbnN0IEZBS0VfU1RBQ0sgPSB0ZXN0U3RhY2soe1xuICBzdGFja05hbWU6ICd3aXRob3V0ZXJyb3JzJyxcbiAgdGVtcGxhdGU6IHsgcmVzb3VyY2U6ICdub2Vycm9ycmVzb3VyY2UnIH0sXG59KTtcblxuZXhwb3J0ID0ge1xuICBhc3luYyAnZG8gZGVwbG95IGV4ZWN1dGFibGUgY2hhbmdlIHNldCB3aXRoIDAgY2hhbmdlcycodGVzdDogVGVzdCkge1xuICAgIC8vIEdJVkVOXG4gICAgY29uc3Qgc2RrID0gbmV3IE1vY2tTREsoKTtcblxuICAgIGxldCBleGVjdXRlZCA9IGZhbHNlO1xuXG4gICAgc2RrLnN0dWJDbG91ZEZvcm1hdGlvbih7XG4gICAgICBkZXNjcmliZVN0YWNrcygpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBTdGFja3M6IFtdXG4gICAgICAgIH07XG4gICAgICB9LFxuXG4gICAgICBjcmVhdGVDaGFuZ2VTZXQoKSB7XG4gICAgICAgIHJldHVybiB7fTtcbiAgICAgIH0sXG5cbiAgICAgIGRlc2NyaWJlQ2hhbmdlU2V0KCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIFN0YXR1czogJ0NSRUFURV9DT01QTEVURScsXG4gICAgICAgICAgQ2hhbmdlczogW10sXG4gICAgICAgIH07XG4gICAgICB9LFxuXG4gICAgICBleGVjdXRlQ2hhbmdlU2V0KCkge1xuICAgICAgICBleGVjdXRlZCA9IHRydWU7XG4gICAgICAgIHJldHVybiB7fTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIC8vIFdIRU5cbiAgICBjb25zdCByZXQgPSBhd2FpdCBkZXBsb3lTdGFjayh7XG4gICAgICBzdGFjazogRkFLRV9TVEFDSyxcbiAgICAgIHNkayxcbiAgICB9KTtcblxuICAgIC8vIFRIRU5cbiAgICB0ZXN0LmVxdWFscyhyZXQubm9PcCwgZmFsc2UpO1xuICAgIHRlc3QuZXF1YWxzKGV4ZWN1dGVkLCB0cnVlKTtcblxuICAgIHRlc3QuZG9uZSgpO1xuICB9LFxufTtcbiJdfQ==