import { CloudFormationStackArtifact } from '@aws-cdk/cx-api';
import { Tag } from "../api/cxapp/stacks";
import { DeployStackResult } from './deploy-stack';
import { ISDK } from './util/sdk';
export declare const DEFAULT_TOOLKIT_STACK_NAME = "CDKToolkit";
export declare type Template = {
    [key: string]: any;
};
/**
 * Interface for provisioners
 *
 * Provisioners apply templates to the cloud infrastructure.
 */
export interface IDeploymentTarget {
    readCurrentTemplate(stack: CloudFormationStackArtifact): Promise<Template>;
    deployStack(options: DeployStackOptions): Promise<DeployStackResult>;
}
export interface DeployStackOptions {
    stack: CloudFormationStackArtifact;
    roleArn?: string;
    notificationArns?: string[];
    deployName?: string;
    quiet?: boolean;
    ci?: boolean;
    toolkitStackName?: string;
    reuseAssets?: string[];
    tags?: Tag[];
    execute?: boolean;
}
export interface ProvisionerProps {
    aws: ISDK;
}
/**
 * Default provisioner (applies to CloudFormation).
 */
export declare class CloudFormationDeploymentTarget implements IDeploymentTarget {
    private readonly aws;
    constructor(props: ProvisionerProps);
    readCurrentTemplate(stack: CloudFormationStackArtifact): Promise<Template>;
    deployStack(options: DeployStackOptions): Promise<DeployStackResult>;
}
