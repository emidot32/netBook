"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const colors = require("colors/safe");
const util = require("util");
// tslint:disable:no-console the whole point of those methods is precisely to output to the console...
exports.isVerbose = false;
function setVerbose(enabled = true) {
    exports.isVerbose = enabled;
}
exports.setVerbose = setVerbose;
function error(fmt, ...args) {
    console.error(colors.red(util.format(fmt, ...args)));
}
exports.error = error;
function debug(fmt, ...args) {
    if (exports.isVerbose) {
        console.error(colors.gray(util.format(fmt, ...args)));
    }
}
exports.debug = debug;
function highlight(fmt, ...args) {
    console.error(colors.bold(colors.white(util.format(fmt, ...args))));
}
exports.highlight = highlight;
function success(fmt, ...args) {
    console.error(colors.green(util.format(fmt, ...args)));
}
exports.success = success;
function warning(fmt, ...args) {
    console.error(colors.yellow(util.format(fmt, ...args)));
}
exports.warning = warning;
function print(fmt, ...args) {
    console.error(colors.white(util.format(fmt, ...args)));
}
exports.print = print;
function data(fmt, ...args) {
    console.log(util.format(fmt, ...args));
}
exports.data = data;
/**
 * Create a logger output that features a constant prefix string.
 *
 * @param prefixString the prefix string to be appended before any log entry.
 * @param fn   the logger function to be used (typically one of the other functions in this module)
 *
 * @returns a new LoggerFunction.
 */
function prefix(prefixString, fn) {
    return (fmt, ...args) => fn(`%s ${fmt}`, prefixString, ...args);
}
exports.prefix = prefix;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9nZ2luZy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImxvZ2dpbmcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxzQ0FBdUM7QUFDdkMsNkJBQThCO0FBRTlCLHNHQUFzRztBQUUzRixRQUFBLFNBQVMsR0FBRyxLQUFLLENBQUM7QUFFN0IsU0FBZ0IsVUFBVSxDQUFDLE9BQU8sR0FBRyxJQUFJO0lBQ3ZDLGlCQUFTLEdBQUcsT0FBTyxDQUFDO0FBQ3RCLENBQUM7QUFGRCxnQ0FFQztBQUVELFNBQWdCLEtBQUssQ0FBQyxHQUFXLEVBQUUsR0FBRyxJQUFXO0lBQy9DLE9BQU8sQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsRUFBRSxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUN2RCxDQUFDO0FBRkQsc0JBRUM7QUFFRCxTQUFnQixLQUFLLENBQUMsR0FBVyxFQUFFLEdBQUcsSUFBVztJQUMvQyxJQUFJLGlCQUFTLEVBQUU7UUFDYixPQUFPLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLEVBQUUsR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7S0FDdkQ7QUFDSCxDQUFDO0FBSkQsc0JBSUM7QUFFRCxTQUFnQixTQUFTLENBQUMsR0FBVyxFQUFFLEdBQUcsSUFBVztJQUNuRCxPQUFPLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsRUFBRSxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3RFLENBQUM7QUFGRCw4QkFFQztBQUVELFNBQWdCLE9BQU8sQ0FBQyxHQUFXLEVBQUUsR0FBRyxJQUFXO0lBQ2pELE9BQU8sQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsRUFBRSxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUN6RCxDQUFDO0FBRkQsMEJBRUM7QUFFRCxTQUFnQixPQUFPLENBQUMsR0FBVyxFQUFFLEdBQUcsSUFBVztJQUNqRCxPQUFPLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLEVBQUUsR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDMUQsQ0FBQztBQUZELDBCQUVDO0FBRUQsU0FBZ0IsS0FBSyxDQUFDLEdBQVcsRUFBRSxHQUFHLElBQVc7SUFDL0MsT0FBTyxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxFQUFFLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3pELENBQUM7QUFGRCxzQkFFQztBQUVELFNBQWdCLElBQUksQ0FBQyxHQUFXLEVBQUUsR0FBRyxJQUFXO0lBQzlDLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLEVBQUUsR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDO0FBQ3pDLENBQUM7QUFGRCxvQkFFQztBQUlEOzs7Ozs7O0dBT0c7QUFDSCxTQUFnQixNQUFNLENBQUMsWUFBb0IsRUFBRSxFQUFrQjtJQUM3RCxPQUFPLENBQUMsR0FBVyxFQUFFLEdBQUcsSUFBVyxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsTUFBTSxHQUFHLEVBQUUsRUFBRSxZQUFZLEVBQUUsR0FBRyxJQUFJLENBQUMsQ0FBQztBQUNqRixDQUFDO0FBRkQsd0JBRUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY29sb3JzID0gcmVxdWlyZSgnY29sb3JzL3NhZmUnKTtcbmltcG9ydCB1dGlsID0gcmVxdWlyZSgndXRpbCcpO1xuXG4vLyB0c2xpbnQ6ZGlzYWJsZTpuby1jb25zb2xlIHRoZSB3aG9sZSBwb2ludCBvZiB0aG9zZSBtZXRob2RzIGlzIHByZWNpc2VseSB0byBvdXRwdXQgdG8gdGhlIGNvbnNvbGUuLi5cblxuZXhwb3J0IGxldCBpc1ZlcmJvc2UgPSBmYWxzZTtcblxuZXhwb3J0IGZ1bmN0aW9uIHNldFZlcmJvc2UoZW5hYmxlZCA9IHRydWUpIHtcbiAgaXNWZXJib3NlID0gZW5hYmxlZDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGVycm9yKGZtdDogc3RyaW5nLCAuLi5hcmdzOiBhbnlbXSkge1xuICBjb25zb2xlLmVycm9yKGNvbG9ycy5yZWQodXRpbC5mb3JtYXQoZm10LCAuLi5hcmdzKSkpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZGVidWcoZm10OiBzdHJpbmcsIC4uLmFyZ3M6IGFueVtdKSB7XG4gIGlmIChpc1ZlcmJvc2UpIHtcbiAgICBjb25zb2xlLmVycm9yKGNvbG9ycy5ncmF5KHV0aWwuZm9ybWF0KGZtdCwgLi4uYXJncykpKTtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gaGlnaGxpZ2h0KGZtdDogc3RyaW5nLCAuLi5hcmdzOiBhbnlbXSkge1xuICBjb25zb2xlLmVycm9yKGNvbG9ycy5ib2xkKGNvbG9ycy53aGl0ZSh1dGlsLmZvcm1hdChmbXQsIC4uLmFyZ3MpKSkpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc3VjY2VzcyhmbXQ6IHN0cmluZywgLi4uYXJnczogYW55W10pIHtcbiAgY29uc29sZS5lcnJvcihjb2xvcnMuZ3JlZW4odXRpbC5mb3JtYXQoZm10LCAuLi5hcmdzKSkpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gd2FybmluZyhmbXQ6IHN0cmluZywgLi4uYXJnczogYW55W10pIHtcbiAgY29uc29sZS5lcnJvcihjb2xvcnMueWVsbG93KHV0aWwuZm9ybWF0KGZtdCwgLi4uYXJncykpKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHByaW50KGZtdDogc3RyaW5nLCAuLi5hcmdzOiBhbnlbXSkge1xuICBjb25zb2xlLmVycm9yKGNvbG9ycy53aGl0ZSh1dGlsLmZvcm1hdChmbXQsIC4uLmFyZ3MpKSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBkYXRhKGZtdDogc3RyaW5nLCAuLi5hcmdzOiBhbnlbXSkge1xuICBjb25zb2xlLmxvZyh1dGlsLmZvcm1hdChmbXQsIC4uLmFyZ3MpKTtcbn1cblxuZXhwb3J0IHR5cGUgTG9nZ2VyRnVuY3Rpb24gPSAoZm10OiBzdHJpbmcsIC4uLmFyZ3M6IGFueVtdKSA9PiB2b2lkO1xuXG4vKipcbiAqIENyZWF0ZSBhIGxvZ2dlciBvdXRwdXQgdGhhdCBmZWF0dXJlcyBhIGNvbnN0YW50IHByZWZpeCBzdHJpbmcuXG4gKlxuICogQHBhcmFtIHByZWZpeFN0cmluZyB0aGUgcHJlZml4IHN0cmluZyB0byBiZSBhcHBlbmRlZCBiZWZvcmUgYW55IGxvZyBlbnRyeS5cbiAqIEBwYXJhbSBmbiAgIHRoZSBsb2dnZXIgZnVuY3Rpb24gdG8gYmUgdXNlZCAodHlwaWNhbGx5IG9uZSBvZiB0aGUgb3RoZXIgZnVuY3Rpb25zIGluIHRoaXMgbW9kdWxlKVxuICpcbiAqIEByZXR1cm5zIGEgbmV3IExvZ2dlckZ1bmN0aW9uLlxuICovXG5leHBvcnQgZnVuY3Rpb24gcHJlZml4KHByZWZpeFN0cmluZzogc3RyaW5nLCBmbjogTG9nZ2VyRnVuY3Rpb24pOiBMb2dnZXJGdW5jdGlvbiB7XG4gIHJldHVybiAoZm10OiBzdHJpbmcsIC4uLmFyZ3M6IGFueVtdKSA9PiBmbihgJXMgJHtmbXR9YCwgcHJlZml4U3RyaW5nLCAuLi5hcmdzKTtcbn1cbiJdfQ==