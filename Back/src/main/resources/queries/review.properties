
countReviews = select count(*) from review where approved = :approved ;
countReviewsForBook = select count(*) from review where book_id = :bookId and approved = true;

addReviewForUserBook = insert into review (user_id, book_id, review_text, rating, approved) values \
  (:userId, :bookId, :reviewText, 0, :approved);

approveReview = update review set approved = true where review_id = :reviewId;

cancelReview = delete from review where review_id = :reviewId;

getReviewPeaceForApprove = select r.review_id r_id, \
    r.user_id u_id, r.book_id b_id, p.person_name u_name, p.avatar_filepath av_path, \
    b.title title, b.authors authors, r.review_text r_text, r.rating rating, r.approved appr from review r \
    inner join person p on r.user_id = p.person_id \
    inner join view_book_list b using (book_id) \
    where r.approved = false \
    order by u_name \
    limit :count offset :offset;

addNotificationApprovedReview = insert into notification (person_id, notif_name, notif_title, notif_text, notif_date, is_read) values ( \
   :personId, :notif_name, :notif_title, :notif_text, LOCALTIMESTAMP(0), false);

getReviewById = select r.review_id r_id, \
    r.user_id u_id, r.book_id b_id, p.person_name u_name, p.avatar_filepath av_path, \
    b.title title, b.authors authors, r.review_text r_text, r.rating rating, r.approved appr from review r \
    inner join person p on r.user_id = p.person_id \
    inner join view_book_list b using (book_id) \
    where r.review_id = :review_id;

getReviewsByBookId = select r.review_id r_id, \
    r.user_id u_id, r.book_id b_id, p.person_name u_name, p.avatar_filepath av_path, \
    b.title title, b.authors authors, r.review_text r_text, r.rating rating, r.approved appr from review r \
    inner join person p on r.user_id = p.person_id \
    inner join view_book_list b using (book_id) \
    where r.book_id = :bookId and r.approved = true;

getReviewPeaceByBookId = select r.review_id r_id, \
    r.user_id u_id, r.book_id b_id, p.person_name u_name, p.avatar_filepath av_path, \
    b.title title, b.authors authors, r.review_text r_text, r.rating rating, r.approved appr from review r \
    inner join person p on r.user_id = p.person_id \
    inner join view_book_list b using (book_id) \
    where r.book_id = :bookId and r.approved = true \
    order by r_id \
    limit :count offset :offset;

countUserReviews = select count(*) from review where user_id = :userId and approved = true;

checkLikedReview = select liked from liked_review where review_id = :reviewId and user_id = :userId;
