getAllViewNotificationsByUserId=SELECT  n.notification_id as "notification_id", \
  n.is_read as "is_read",  \
n.book_id as "book_id",\
n.notif_type_id as "notif_type_id", n.notif_date,\
(select bo.title from book bo, overview ov where ov.book_id= bo.book_id and ov.overview_id = n.overview_id ) as "overview_name", \
(select bo.title from book bo, review re where re.book_id= bo.book_id and re.review_id = n.review_id ) as "review_name", \
(select pe.login from person pe where pe.person_id = n.from_user_id) as "from_user_name", \
(select boo.title from book boo where n.book_id= boo.book_id ) as "book_name", \
(select ac.title from achievement ac where ac.achv_id = n.achiev_id ) as "achiev_name", \
ntt.notif_title, ntt.notif_text \
FROM notification n, (select * FROM notif_type nt) ntt \
where n.notif_type_id = ntt.notif_type_id \
and n.user_id = :user_id \
order by n.notif_date desc \
offset (:offset * :cnt) rows \
fetch first :cnt row only;

getAllUnreadViewNotificationsByUserId=SELECT  n.notification_id as "notification_id", \
  n.is_read as "is_read",  \
n.book_id as "book_id",\
n.notif_type_id as "notif_type_id", n.notif_date,\
(select bo.title from book bo, overview ov where ov.book_id= bo.book_id and ov.overview_id = n.overview_id ) as "overview_name", \
(select bo.title from book bo, review re where re.book_id= bo.book_id and re.review_id = n.review_id ) as "review_name", \
(select pe.login from person pe where pe.person_id = n.from_user_id) as "from_user_name", \
(select boo.title from book boo where n.book_id= boo.book_id ) as "book_name", \
(select ac.title from achievement ac where ac.achv_id = n.achiev_id ) as "achiev_name", \
ntt.notif_title, ntt.notif_text \
FROM notification n, (select * FROM notif_type nt) ntt \
where n.notif_type_id = ntt.notif_type_id \
and n.user_id = :user_id \
 and n.is_read=false \
order by n.notif_date desc \
offset (:offset * :cnt) rows \
fetch first :cnt row only;


getCountNotifications=SELECT count('x') \
FROM notification n \
where n.user_id = :user_id \
and n.is_read=false

getAllNotificationsByUserId=SELECT * \
FROM notification n \
where n.user_id = :user_id\
  and n.is_read=false\
order by n.notif_date desc

markAllAsRead=UPDATE notification SET is_read = TRUE WHERE user_id = :user_id

markNotifAsReadByNotifId=UPDATE notification SET is_read = TRUE WHERE notification_id= :notification_id

addNotification=INSERT INTO notification (user_id, notif_date, is_read, from_user_id, notif_type_id, overview_id,review_id,book_id, achiev_id) \
  VALUES (:user_id, :notif_date, :is_read, :from_user_id, :notif_type_id, :overview_id, :review_id, :book_id, :achiev_id)

deleteAllNotificationsByUserId=DELETE FROM notification WHERE user_id = :user_id


